# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

parameters:
  forceRun: false

steps:
- task: PowerShell@2
  displayName: Report build failure
  condition: or( failed(), eq( ${{ parameters.forceRun }}, true ) )
  env:
    GITHUB_TOKEN: $(GitHubToken)
  inputs:
    errorActionPreference: 'silentlyContinue'    
    targetType: 'inline'
    script: |

      # check if this is a PR
      if($env:System_PullRequest_PullRequestId -ne $null)
      {
          Write-Host "Building from PR $env:System_PullRequest_PullRequestId"

          $user = $(gh pr view $env:System_PullRequest_PullRequestNumber --json author --jq .author.login)

          # only warn user if it's NOT an automated build
          if($user -eq 'nfbot' -or $user -eq 'github-actions[bot]' -or $user -eq 'github-actions' -or $user -eq 'dependabot[bot]' -or $user -eq 'dependabot')
          {
              Write-Host "Skipping warning"
          }
          else
          {
              Write-Host "Sending warning to $user"

              $commentBody = "Hey @$user!`n`nSeems that the build is failing for this PR... :hushed: Please check it."

              Write-Host "Adding comment $commentId"
              $comment = gh pr comment $env:System_PullRequest_PullRequestNumber --body $commentBody

              $comment -match '(\d+\#issuecomment\-)(?<CommentId>\d+)'

              $commentId = $matches.CommentId
              
              Write-Host "Added comment $commentId"

              # need to wait a few seconds, otherwise github won't pickup the comment for sending
              Start-Sleep -Seconds 10
              
              gh api "repos/$env:Build_Repository_Name/issues/comments/$commentId" --method DELETE

              Write-Host "Comment removed"
          }
      }
      else
      {
          Write-Host "Building from other than PR. Nothing to do here."
      }
