# Copyright (c) 2019 The nanoFramework project contributors
# See LICENSE file in the project root for full license information.

parameters:
  skipNuGetRestore: false
  gitUser: 'nfbot'
  gitEmail: 'nanoframework@outlook.com'

steps:

# publish artifacts (only possible if this is not a PR originated on a fork)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: deployables
    ArtifactType: Container
  condition: and( succeeded(), ne(variables['system.pullrequest.isfork'], true), ne( variables['StartReleaseCandidate'], true ) )
  displayName: Publish deployables artifacts

# push NuGet packages to Azure Artifacts feed (always happens except on PR builds)
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    publishFeedCredentials: 'AzureArtifacts-$(System.TeamProject)'
  condition: and( succeeded(), ne( variables['StartReleaseCandidate'], true ) )
  continueOnError: true
  displayName: Push NuGet packages to Azure Artifacts

# push NuGet class lib package to NuGet (happens on tag builds for any branch or when building a non draft release)
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    allowPackageConflicts: true
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    publishFeedCredentials: 'NuGet-$(System.TeamProject)'
  condition: and( succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'), ne( variables['StartReleaseCandidate'], true ) )
  continueOnError: true
  displayName: Push NuGet packages to NuGet
